<Project Sdk="Microsoft.NET.Sdk">

  <!-- Simulate consuming nuget package props file. -->
  <Import Project="../Figgle.Generator/build/Figgle.Generator.props" />
  
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.14.0" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.3.2" />
    <PackageReference Include="xunit" Version="2.9.3" />
    <PackageReference Include="xunit.runner.visualstudio" Version="3.1.0">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="coverlet.collector" Version="3.0.2">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <AdditionalFiles Include="../Figgle.Generator.Tests/ANSI Shadow.flf" FontName="My External Font" />
  </ItemGroup>
  
  <ItemGroup>
    <ProjectReference Include="..\Figgle.Generator\Figgle.Generator.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
    
    <!-- 
      Figgle.Generator has a runtime dependency to Figgle.dll and Figgle.Fonts.dll which is packaged
      into the generator's nuget package and loaded automatically when a project consumes the nuget.
      
      Since this test project is referencing the generator manually, we must also manually include
      the dependencies as an "analyzer" so the compiler can find it when running the generator.
    -->
    <ProjectReference Include="..\Figgle\Figgle.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="true" />
    <ProjectReference Include="..\Figgle.Fonts\Figgle.Fonts.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
  </ItemGroup>

</Project>
